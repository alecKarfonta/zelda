Type: code_explanation
Quality Score: 8.5
Validation Notes: 
--------------------------------------------------
Instruction: Explain how Actor_SpawnAsChild() works and how it's used to create actor hierarchies in OoT",
    
    "input": null,
    
    "output": "Actor_SpawnAsChild() is a core function used to create parent-child relationships between actors in OoT. Here's how it works:

Function signature:
Actor* Actor_SpawnAsChild(GlobalContext* globalCtx, Actor* parent, u16 actorId, float x, float y, float z, s16 rotX, s16 rotY, s16 rotZ)

Key points:
- Creates a new actor instance that is linked to a parent actor
- Child inherits certain properties from parent (like room number)
- Child is automatically killed when parent is destroyed
- Returns pointer to new child actor, or NULL if spawn fails

Common usage example:
```c
// Spawn a collectible as child of chest actor
Actor* item = Actor_SpawnAsChild(&globalCtx, &this->actor, 
    ACTOR_EN_ITEM00, // Actor ID for collectibles
    this->actor.world.pos.x,
    this->actor.world.pos.y + 40.0f, 
    this->actor.world.pos.z,
    0, 0, 0); // No rotation

if (item != NULL) {
    item->params = this->itemId; // Set what item appears
}
```

This is commonly used for:
- Items dropping from enemies
- Effects attached to NPCs
- Projectiles fired from weapons
- Multi-part boss entities",

    "technical_notes": "Based on decomp function at src/code/z_actor.c. Uses standard OoT coordinate system and rotation angles in binary angle format (0-65535). Memory usage follows standard actor allocation rules with minimum 0x128 bytes.
Output:
Actor_SpawnAsChild() is a core function used to create parent-child relationships between actors in OoT. Here's how it works:

Function signature:
Actor* Actor_SpawnAsChild(GlobalContext* globalCtx, Actor* parent, u16 actorId, float x, float y, float z, s16 rotX, s16 rotY, s16 rotZ)

Key points:
- Creates a new actor instance that is linked to a parent actor
- Child inherits certain properties from parent (like room number)
- Child is automatically killed when parent is destroyed
- Returns pointer to new child actor, or NULL if spawn fails

Common usage example:
```c
// Spawn a collectible as child of chest actor
Actor* item = Actor_SpawnAsChild(&globalCtx, &this->actor, 
    ACTOR_EN_ITEM00, // Actor ID for collectibles
    this->actor.world.pos.x,
    this->actor.world.pos.y + 40.0f, 
    this->actor.world.pos.z,
    0, 0, 0); // No rotation

if (item != NULL) {
    item->params = this->itemId; // Set what item appears
}
```

This is commonly used for:
- Items dropping from enemies
- Effects attached to NPCs
- Projectiles fired from weapons
- Multi-part boss entities",

    "technical_notes": "Based on decomp function at src/code/z_actor.c. Uses standard OoT coordinate system and rotation angles in binary angle format (0-65535). Memory usage follows standard actor allocation rules with minimum 0x128 bytes.
